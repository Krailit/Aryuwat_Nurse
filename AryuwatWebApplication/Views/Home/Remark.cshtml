@using AryuwatWebApplication.Models
@{
    ViewBag.Title = "Remark Patient";
}
<div id="app" class="container-fluid">
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10" style="background-color:#ffe480">
        <div class="container">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <div class="row">
                            <div class="col-lg-1" style="padding-top: 9px;">
                                <a v-on:click="BackCustomer()" style="color:black;font-size:30px;"><i class="fa fa-angle-double-left"></i></a>
                            </div>
                            <div class="col-lg-6">
                                <h1 class="page-header-title">
                                    {{tmpCustomer.Patient_Name}}
                                </h1>
                            </div>
                            <div class="col-lg-5">
                                <h1 class="page-header-title">
                                    {{'Room : ' + (tmpCustomer.Room == null ? '-' : tmpCustomer.Room)}}
                                </h1>
                            </div>
                            <div class="col-lg-1">
                            </div>
                            <div class="col-lg-11">
                                <div class="page-header-subtitle">CN : {{tmpCustomer.CN}}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="container mt-n10">
        <div class="card mb-4">
            <div class="card-header">Remark</div>
            <div class="card-body">
                <div class="datatable">
                    <table class="table table-bordered table-hover" id="dataTable" cellspacing="0">
                        <thead>
                            <tr>
                                <th class="text-center align-middle" style="padding-left:50px;">ประเภทการแจ้งเตือน</th>
                                <th class="text-center align-middle" style="">รายการ</th>
                                <th class="text-center align-middle" style="">รายละเอียด</th>
                                <th class="text-center align-middle" style="">วันที่แจ้งเตือน</th>
                                <th class="text-center align-middle" style="">สถานะแจ้งเตือน</th>
                                <th class="text-center align-middle" style="">Update</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr :key="index" v-for="(items, index) in dataRemark" v-if="dataRemark.length > 0" class="rowHover">
                                <td class="text-left align-middle">
                                    {{items.Remark_Type == 1 ? 'แจ้งเตือนทั่วไป' : 'แจ้งเตือนการกินยา' }}
                                </td>
                                <td class="text-left align-middle" style="width:40%;padding-left:50px;">
                                    <p>
                                        {{items.Topic}}
                                    </p>
                                </td>
                                <td class="text-left align-middle">
                                    {{items.Description}}
                                </td>
                                <td class="text-center align-middle">
                                    {{parseDate(items.Alert_Date)}}
                                </td>
                                <td class="text-center align-middle">
                                    {{items.Publish == true ? 'เปิด' : 'ปิด' }}
                                </td>
                                <td class="text-center align-middle">
                                    <button class="btn btn-outline-success btn-sm" type="button" data-toggle="modal" data-target="#RemarkModal" v-on:click="UpdateRemark(items)">Update</button>
                                </td>
                            </tr>
                            <tr v-if="dataRemark.length == 0">
                                <td class="text-left" colspan="5">
                                    No data available in table
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="RemarkModal" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true" style="font-size: 18px">
        <div class="modal-dialog modal-dialog-scrollable" style="width: 1000px;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalScrollableTitle">เพิ่ม / แก้ไข การแจ้งเตือน</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row" style="padding: 10px;">
                            <div class="col-lg-1/">
                                <label> ประเภทการแจ้งเตือน </label>
                                <input type="radio" id="one" value="1" v-model="modaldata[0].modelType" />
                                <label for="one">ทั่วไป</label>
                                <input type="radio" id="two" value="2" v-model="modaldata[0].modelType" />
                                <label for="two">การกินยา</label>
                            </div>
                            <div class="col-lg-10">
                                <label> รายการ </label>
                            </div>
                            <div class="col-lg-12">
                                <input type="text" v-model="modaldata[0].modelTopic" />
                            </div>
                            <div class="col-lg-12" style="padding-top:20px">
                                <label> รายละเอียด </label>
                            </div>
                            <div class="col-lg-12">
                                <textarea v-model="modaldata[0].modelDescription"></textarea>
                            </div>
                            <div class="col-lg-12" style="padding-top:20px">
                                <label> วันทีแจ้งเตือน </label>
                            </div>
                            <div class="col-lg-12">
                                <input type="date" v-model="modaldata[0].modelDate" />
                            </div>
                            <div class="col-lg-12" style="padding-top:20px">
                                <input type="checkbox" id="chkActive" v-model="modaldata[0].modelPulish" />
                                <label for="chkActive"> เปิดใช้งาน</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" v-on:click="UpdateAlert()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <div class="fade"
         :class="{'modal-backdrop show' : showload}"
         :style="{'cursor' : (showload ? 'wait': ''),'z-index' : (showload ? '9999': '')}">
        <div v-if="showload" style="color:white;position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%)">
            <i class="fa fa-plus fa-spin fa-3x fa-fw"></i><br />
            <span>Loading...</span>
        </div>
    </div>
</div>
<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/axios.js"></script>
<script src="~/Scripts/moment.js"></script>
<script>

    Vue.prototype.$http = axios;
    const app = new Vue({
        el: "#app",
        data: {
            tmpCustomer : @Html.Raw(Json.Encode(@Model)),
            dataRemark: [],
            modaldata: [{
                modelID: 0,
                modelTopic: '',
                modelDescription: '',
                modelDate: null,
                modelPulish: true,
                modelType: 0,
            }],
            showload: false,
            flagupdate: false,
        },
        mounted: function () {
            var that = this;
            if (that.tmpCustomer.CN == null) {
                window.location.href = '@Url.Content("~/Home/Index")';
            }
            that.modaldata[0].modelDate = that.parseDate(Date.now());
            that.GetDataRemark();
        },
        watch: {
        },
        methods: {
            BackCustomer:function(){
                var that=this;
                window.location.replace('@Url.Action("PatientDetail", "Home")?customerCN=' + that.tmpCustomer.CN)
            },
            UpdateAlert:function(){
                var that = this;
                var conf = confirm("ยืนยันการบันทึก [ใช่หรือไม่]");
                if (conf === true) {
                    that.showload = true;
                    if (!that.flagupdate) {
                        that.$http.post('@Url.Action("AddAlert", "Home")', {
                            tmpData: JSON.stringify(that.modaldata),
                            tmpCustomerID: that.tmpCustomer.ID
                        }).then(function (response) {
                            if (response.data.ContentEncoding == 200) {
                                alert('Add Data Success');
                                location.reload();
                            }
                        })
                        .catch(function (error) {
                            console.log(error);
                        })
                        .finally(function () {
                            that.showload = false;
                        });
                    }
                    else {
                        that.$http.post('@Url.Action("UpdateAlert", "Home")', {
                            tmpData: JSON.stringify(that.modaldata),
                            tmpCustomerID: that.tmpCustomer.ID
                        }).then(function (response) {
                            if (response.data.ContentEncoding == 200) {
                                alert('Update Data Success');
                                location.reload();
                            }
                        })
                        .catch(function (error) {
                            console.log(error);
                        })
                        .finally(function () {
                            that.showload = false;
                        });
                    }
                }
            },
            parseDate: function (jsonDateString){
                return moment(jsonDateString).format("YYYY-MM-DD").toUpperCase();
            },
            UpdateRemark: function (val) {
                var that = this;
                that.modaldata = [{
                    modelID: 0,
                    modelTopic: '',
                    modelDescription: '',
                    modelDate: null,
                    modelPulish: true,
                    modelType: 0,
                }];

                that.flagupdate = true;
                that.modaldata[0].modelID = val.ID;
                that.modaldata[0].modelTopic = val.Topic;
                that.modaldata[0].modelDescription = val.Description;
                that.modaldata[0].modelDate = that.parseDate(val.Alert_Date);
                that.modaldata[0].modelPulish = val.Publish;
                that.modaldata[0].modelType = val.Remark_Type;
            },
            GetDataRemark:function(){
                var that = this;
                that.showload = true;
                that.$http.post('@Url.Action("GetDataRemark", "Home")', {
                    tmpCustomerID: that.tmpCustomer.ID
                }).then(function (response) {
                    if (response.data.ContentEncoding == 200) {
                        that.dataRemark = response.data.data;
                    }
                })
                .catch(function (error) {
                    console.log(error);
                })
                .finally(function () {
                    that.showload = false;
                });
            },
        }
    });
</script>

@using AryuwatWebApplication.Models
@{
    ViewBag.Title = "Patient list";
}
<style>
    .rowHover {
        background-color: white;
    }
    .rowHover:hover {
        background-color: gainsboro;
    }
</style>
<div id="app">
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10" style="background-color:#ffe480">
        <div class="container">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <h1 class="page-header-title">
                            <div class="page-header-icon"><i data-feather="users"></i></div>
                            Patient
                        </h1>
                        <div class="page-header-subtitle">Patient data list</div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="container mt-n10">
        <div class="card mb-4">
            <div class="card-header">Patient list</div>
            <div class="card-body">
                <div class="datatable">
                    <table class="table table-bordered table-hover" id="dataTable" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>CN</th>
                                <th>Room</th>
                                <th>Start date</th>
                                <th>End date</th>
                                <th>Meeting</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-if="tempCustomer.length > 0" :key="index" v-for="(items, index) in tempCustomer">
                                <td class="text-left">
                                    {{ items.Patient_Name }}
                                </td>
                                <td class="text-center">
                                    {{ items.CN }}
                                </td>
                                <td class="text-center">
                                    {{ items.Room == null ? '-' : items.Room}}
                                </td>
                                <td class="text-center">
                                    {{ items.Start == null ? '-' : parseJsonDate(items.Start) }}
                                </td>
                                <td class="text-center">
                                    {{ items.End == null ? '-' : parseJsonDate(items.End) }}
                                </td>
                                <td class="text-center">
                                    {{ items.Meeting == null ? '-' : parseJsonDate(items.Meeting) }}
                                </td>
                                <td>
                                    <button class="btn btn-datatable btn-icon btn-transparent-dark mr-2" v-on:click="sendCNtoTemp(items.CN)"><i class="fa fa-edit"></i></button>
                                </td>
                            </tr>
                            <tr v-if="tempCustomer.length == 0">
                                <td class="text-left" colspan="7">
                                    No data available in table
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="fade"
         :class="{'modal-backdrop show' : showload}"
         :style="{'cursor' : (showload ? 'wait': ''),'z-index' : (showload ? '9999': '')}">
        <div v-if="showload" style="color:white;position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%)">
            <i class="fa fa-plus fa-spin fa-3x fa-fw"></i><br />
            <span>Loading...</span>
        </div>
    </div>
</div>
<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/axios.js"></script>
<script src="~/Scripts/moment.js"></script>
<script>
            Vue.prototype.$http = axios;
            const app = new Vue({
                el: "#app",
                data: {
                showload: false,
                    tempCustomer: [],
                    searchtxt: '',
                },
                mounted: async function () {
                    this.GetDataTableCustomer();
                    await this.AlertMeeting();
                    await this.SendAlertMeeting();
                },
                watch: {
                    searchtxt: function (val) {
                        var vm = this;
                        vm.$http.get('@Url.Action("TableCustomer", "Home")?searchtxt=' + vm.searchtxt)
                            .then(function (response) {
                                if (response.data.ContentEncoding == 200) {
                                    vm.tempCustomer = response.data.data;
                                }
                        });
                    },
                },
                methods: {
                    GetDataTableCustomer:function(data){
                        var vm = this;
                        vm.showload = true;
                        vm.$http.get('@Url.Action("TableCustomer", "Home")?searchtxt=' + vm.searchtxt)
                            .then(function (response) {
                                if (response.data.ContentEncoding == 200) {
                                    vm.tempCustomer = response.data.data;
                                }
                            })
                            .catch(function (error) {
                                console.log(error);
                            })
                            .finally(function () {
                                vm.showload = false;
                            });
                    },
                    SendAlertMeeting: async function(data){
                        var vm = this;
                        await vm.$http.post('@Url.Action("sendnoti", "Home")')
                        .then(function (response) {
                            if (response.data.ContentEncoding == 200) {
                                console.log('sendline');
                            }
                        });
                    },
                    AlertMeeting:async function(data){
                        var that = this;
                        await that.$http.post('@Url.Action("CheckMeeting", "Home")').then(function(response)
                        {
                            if (response.data.ContentEncoding == 200) {
                                if (response.data != "") {
                                    var msgRemark = "<p style='color:red'>";
                                    msgRemark += '<b>Tomorrow Meeting :</b><br>';
                                    msgRemark += response.data.data;
                                    msgRemark += "</p>";
                                    Swal.fire({
                                        html: msgRemark,
                                        icon: 'warning',
                                        confirmButtonText: 'Close',
                                        allowOutsideClick: false
                                    })
                                }
                            }
                        });
                    },
                    parseJsonDate: function (jsonDateString) {
                        return moment(jsonDateString).format("MMM DD, YYYY").toUpperCase();
                    },
                    sendCNtoTemp:function(CN){
                        var that=this;
                        window.location.replace('@Url.Action("PatientDetail", "Home")?customerCN=' + CN)
                    },
                }
            });
</script>

@using AryuwatWebApplication.Models
@{
    ViewBag.Title = "Patient Data";
}
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>
<script src="http://code.highcharts.com/themes/grid.js"></script>
<style>
    .vuetable th.sortable[data-v-5cc42bfc]:hover {
        color: #b77147;
        cursor: pointer;
    }

    .table thead th {
        color: #b77147;
    }

    .text-white {
        color: #000000 !important;
        font-size: 22px;
    }

    a:not([href]) {
        color: #b77147;
        text-decoration: none;
    }
</style>
<div id="app" class="container-fluid">
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10" style="background-color:#ffe480">
        <div class="container">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <div class="row">
                            <div class="col-lg-1" style="padding-top: 9px;">
                                <a v-on:click="BackCustomer()" style="color:black;font-size:30px;"><i class="fa fa-angle-double-left"></i></a>
                            </div>
                            <div class="col-lg-6">
                                <h1 class="page-header-title">
                                    {{tmpCustomer.Patient_Name}}
                                </h1>
                            </div>
                            <div class="col-lg-5">
                                <h1 class="page-header-title">
                                    {{'Room : ' + (tmpCustomer.Room == null ? '-' : tmpCustomer.Room)}}
                                </h1>
                            </div>
                            <div class="col-lg-1">
                            </div>
                            <div class="col-lg-11">
                                <div class="page-header-subtitle">CN : {{tmpCustomer.CN}}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="container mt-n10">
        <div class="card mb-4">
            <div class="card-header">ตรวจวัดข้อมูลผู้ป่วย</div>
            <div class="card-body">
                <div class="datatable">
                    <div class="table-responsive">
                        <div id="chart" style="width: 1000px; height: 400px; margin: 0 auto;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="card mb-4">
            <div class="card-header">
                <div class="row">
                    <div class="col-6 text-left">
                        ตรวจวัดข้อมูลผู้ป่วย
                    </div>
                    <div class="col-6 text-right">
                        <button class="btn btn-indigo-soft btn-sm" v-on:click="ExportExcel()">
                            <i class="fa fa-print"></i>&nbsp; Export Excel
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="datatable">
                    <div class="table-responsive">
                        <div class="row">
                            <div class="col-sm-6 col-lg-4 text-left">
                                <p style="text-align:left">ตั้งแต่วันที่</p>
                                <v-date-picker v-model='ToDateSearch' />
                            </div>
                            <div class="col-sm-6 col-lg-4 text-left">
                                <p style="text-align:left">ถึง</p>
                                <p style="text-align:left"></p>
                                <v-date-picker v-model='EndDateSearch' />
                            </div>
                        </div>
                        <div class="row" style="padding:20px;">
                            <div class="col-12 text-right">
                                <button class="btn btn-success btn-sm" data-toggle="modal" data-target="#myModal" v-on:click="openPopupNew(items)"><i class="fa fa-plus"></i>&nbsp; Add Data</button>
                            </div>
                        </div>

                        <div class="row" style="padding-bottom: 10px">
                            <div class="col-md-6 text-left">
                                <div class="form-inline">
                                    <label>Show &nbsp; </label>
                                    <select :disabled="fetch" v-model="perPage" style="cursor:pointer;border-radius:5px;height: calc(1.1em + 1rem + 1px);padding: 0.2rem 1rem;" class="form-control selectpicker input-group">
                                        <option value="10">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                    <label>&nbsp; entries</label>
                                </div>
                            </div>
                            <div class="col-md-6 text-right">
                                <label>Search: &nbsp; </label>
                                <input v-model="Search" style="color: #687281; background-color: #fff; background-clip: padding-box; border: 1px solid #c5ccd6;font-weight: 400;height: calc(1.5em + 0.5rem + 2px);padding: 0.25rem 0.5rem;font-size: 0.875rem;line-height: 1.5;border-radius: 0.25rem;" />
                            </div>
                        </div>
                        <vuetable ref="vuetable"
                                  api-url="@Url.Action("GetDataPatient","Home")"
                                  v-bind:fields="fields"
                                  v-bind:sort-order="sortOrder"
                                  v-bind:css="css.table"
                                  v-on:vuetable:row-clicked="openPopup"
                                  pagination-path=""
                                  v-bind:append-params="appendParams"
                                  v-bind:per-page="perPage"
                                  v-on:vuetable:loading="onLoading"
                                  v-on:vuetable:loaded="onLoaded"
                                  v-on:vuetable:pagination-data="onPaginationData">
                            <template slot="Pulse" scope="props">
                                <div class="table-button-container" id="Pulse">
                                    {{props.rowData.PulseSBP == '' ? "" : (props.rowData.PulseSBP + "/" + props.rowData.PulseDBP)}}
                                </div>
                            </template>
                        </vuetable>
                    </div>
                    <div class="row" style="padding:20px;">
                        <div class="vuetable-pagination ui basic grid col-lg-12 color-text table-responsive">
                            <div class="col-12 text-right">
                                <vuetable-pagination ref="pagination"
                                                     v-bind:css="css.pagination"
                                                     v-on:vuetable-pagination:change-page="onChangePage">
                                </vuetable-pagination>
                            </div>
                            <div class="col-12 text-left">
                                <vuetable-pagination-info style="padding-top: 8px;"
                                                          ref="paginationInfo"
                                                          v-bind:css="css.paginationInfo"
                                                          v-bind:noDataTemplate="paginationNoDataTemplate"
                                                          v-bind:infoTemplate="paginationInfoTemplate">
                                </vuetable-pagination-info>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            </div>
    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true" style="font-size: 18px">
        <div class="modal-dialog modal-dialog-scrollable" style="width: 1000px;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalScrollableTitle">เพิ่ม / แก้ไข ข้อมูล</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row" style="padding: 10px">
                                    <div class="col-sm-7 col-lg-7" style="padding: 10px">
                                        <p style="text-align:left">วันที่ :</p>
                                        <v-date-picker ref="calendar" v-model='popPatientData.Date' :value="popPatientData.Date" />
                                    </div>
                                    <div class="col-sm-5 col-lg-5">
                                        <p style="text-align:left">เวลา :</p>
                                        <div class="row">
                                            <div class="col-sm-4 col-lg-5">
                                                <input type="number" v-model="popPatientData.Hour" style="font-size: 16px;width: 100%" max="23" />
                                            </div>
                                            <div class="col-sm-2 col-lg-1">
                                                <p style="text-align:center">:</p>
                                            </div>
                                            <div class="col-sm-4 col-lg-5">
                                                <input type="number" v-model="popPatientData.Minute" style="font-size: 16px;width: 100%" max="59" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">T :</p>
                                    </div>
                                    <div class="col-9">
                                        <input type="number" v-model="popPatientData.T" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">BP (SBP) :</p>
                                    </div>
                                    <div class="col-3">
                                        <input type="number" v-model="popPatientData.PulseSBP" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">BP (DBP) :</p>
                                    </div>
                                    <div class="col-3">
                                        <input type="number" v-model="popPatientData.PulseDBP" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">R :</p>
                                    </div>
                                    <div class="col-3">
                                        <input type="number" v-model="popPatientData.R" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">Pulse :</p>
                                    </div>
                                    <div class="col-3">
                                        <input type="number" v-model="popPatientData.BP" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-3">
                                        <p style="text-align:right">O2 :</p>
                                    </div>
                                    <div class="col-7">
                                        <input type="number" v-model="popPatientData.O2" style="font-size: 16px;width: 5ch" />
                                    </div>
                                    <div class="col-4">
                                        <p style="text-align:right">IN ORAL :</p>
                                    </div>
                                    <div class="col-5">
                                        <input type="number" v-model="popPatientData.In_Oral" style="font-size: 16px;width: 7ch" />
                                    </div>
                                    <div class="col-4">
                                        <p style="text-align:right">IN Parenteral :</p>
                                    </div>
                                    <div class="col-5">
                                        <input type="number" v-model="popPatientData.In_Parenteral" style="font-size: 16px;width: 7ch" />
                                    </div>
                                    <div class="col-4">
                                        <p style="text-align:right">OUT Stools :</p>
                                    </div>
                                    <div class="col-5">
                                        <input type="number" v-model="popPatientData.Out_Stools" style="font-size: 16px;width: 7ch" />
                                    </div>
                                    <div class="col-4">
                                        <p style="text-align:right">OUT Urine :</p>
                                    </div>
                                    <div class="col-5">
                                        <input type="number" v-model="popPatientData.Out_Urine" style="font-size: 16px;width: 7ch" />
                                    </div>
                                </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" v-on:click="SaveDataPatient()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <div class="fade"
         :class="{'modal-backdrop show' : showLoad}"
         :style="{'cursor' : (showLoad ? 'wait': ''),'z-index' : (showLoad ? '9999': '')}">
        <div v-if="showLoad" style="color:white;position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%)">
            <i class="fa fa-plus fa-spin fa-3x fa-fw"></i><br />
            <span>Loading...</span>
        </div>
    </div>
</div>
<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/axios.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/vuetable-2.js"></script>
<script src='https://unpkg.com/vue/dist/vue.js'></script>
<script src='https://unpkg.com/v-calendar'></script>
<script>
    @*var tempchart = @Html.Raw(Json.Encode(@Model.chart));
    var tempchart2 = @Html.Raw(Json.Encode(@Model.chart2));*@
    var lblChartData = [];
    var dataPSinChartData = [];
    var dataPDinChartData = [];

    Vue.use(Vuetable);
    Vue.prototype.$http = axios;
    const app = new Vue({
        el: "#app",
        data: {
            tmpCustomer : @Html.Raw(Json.Encode(@Model.data)),
            tempchart: [],
            tempchart2: [],
            datatemp: [],
            datatemp2: [],
            PatientData: [],
            popPatientData: [],
            fileURL: '',
            showLoad: false,
            Search: "",
            File: "",
            AttachFileName: "",
            ToDateSearch: "",
            EndDateSearch: "",
            paginationInfoTemplate: 'แสดง {from} ถึง {to} จากทั้งหมด {total} รายการ',
            paginationNoDataTemplate: 'ไม่มีข้อมูลที่เกี่ยวข้อง',
            appendParams: {},
            fields: [
                {
                    name: 'Date',
                    title: 'Date',
                    sortField: 'Date',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle',
                    callback: "parseJsonDate"
                }, {
                    name: 'Time',
                    title: 'Time',
                    sortField: 'Time',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'T',
                    title: 'T',
                    sortField: 'T',
                    sortField: 'SearchProvince',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                //}, {
                //    name: 'PulseSBP' + '/' + 'PulseDBP',
                //    title: 'BP',
                //    sortField: 'PulseSBP' + '/' + 'PulseDBP',
                //    titleClass: 'text-center align-middle header',
                //    dataClass: 'text-center align-middle'
                },{
                    name: '__slot:Pulse',
                    title: 'BP',
                    sortField: 'PulseSBP',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'R',
                    title: 'R',
                    sortField: 'R',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'BP',
                    title: 'P',
                    sortField: 'BP',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'O2',
                    title: 'O2',
                    sortField: 'O2',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'In_Oral',
                    title: 'IN Oral',
                    sortField: 'In_Oral',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'In_Parenteral',
                    title: 'IN Parenteral',
                    sortField: 'In_Parenteral',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'Out_Stools',
                    title: 'OUT Stools',
                    sortField: 'Out_Stools',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }, {
                    name: 'Out_Urine',
                    title: 'OUT Urine',
                    sortField: 'Out_Urine',
                    titleClass: 'text-center align-middle header',
                    dataClass: 'text-center align-middle'
                }
            ],
            sortOrder: [{
                field: 'ID',
                direction: 'asc'
            }],
            css: {
                table: {
                    tableClass: 'table hb-table hb-table-dashboard ',
                    loadingClass: 'fa fa-spinner fa-pulse fa-3x fa-fw',
                    ascendingIcon: 'fa fa-chevron-circle-up fa-sm',
                    descendingIcon: 'fa fa-chevron-circle-down fa-sm',
                    handleIcon: 'fa fa-bars',
                },
                pagination: {
                    infoClass: 'pull-left',
                    wrapperClass: 'vuetable-pagination pull-right',
                    activeClass: 'hb-btn-primary text-white',
                    disabledClass: 'Enabled',
                    pageClass: 'btn btn-pagination btn-border cursor-pointer',
                    linkClass: 'btn btn-pagination btn-border cursor-pointer',
                    icons: {
                        first: 'fa fa-angle-double-left fa-lg',
                        prev: 'fa fa-chevron-circle-left fa-lg',
                        next: 'fa fa-chevron-circle-right fa-lg',
                        last: 'fa fa-angle-double-right fa-lg',
                    },
                    paginationInfo: {

                    },
                }
            },
            fetch: false,
            perPage: 10,
            chart1: null,
        },
        mounted: async function () {
            var that = this;
            that.showLoad = true;
            var dt = new Date(Date.now());
            dt.setDate(dt.getDate() - 1);
            that.ToDateSearch = that.parseJsonDate(Date.now());
            that.EndDateSearch = that.parseJsonDate(Date.now());
            await that.PatientChartData();
            if (that.tmpCustomer.CN == null) {
                window.location.href = '@Url.Content("~/Home/Index")';
            }
            if (1 != 1) {
                //that.PatientData.push(
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '00:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '00:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '01:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '01:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '02:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '02:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '03:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '03:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '04:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '04:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '05:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '05:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '06:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '06:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '07:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '07:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '08:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '08:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '09:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '09:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '10:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '10:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '11:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '11:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '12:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '12:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '13:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '13:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '14:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '14:40',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '15:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '15:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '16:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '16:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '17:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '17:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '18:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '18:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '19:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '19:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '20:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '20:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '21:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '21:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '22:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '22:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '23:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '23:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },

                //);
            }
            //await that.GetPatientData();
            //await that.onFilterSet();
            that.showLoad = false;
        },
        watch: {
            'perPage'() {
                this.onRefresh();
            },
            'ToDateSearch'() {
                this.onFilterSet();
                this.PatientChartData();
            },
            'EndDateSearch'() {
                this.onFilterSet();
                this.PatientChartData();
            },
            'Search'() {
                this.onFilterSet();
            },
            //'PatientData'(val) {
            //    $('#dataTable').DataTable().destroy();
            //    this.$nextTick(() => {
            //        $('#dataTable').DataTable().draw();
            //    })
            //},
        },
        methods: {
            onLoading: function () {
                this.fetch = true;
            },
            onLoaded: function () {
                this.fetch = false;
            },
            onPaginationData: function (paginationData) {
                this.$refs.pagination.setPaginationData(paginationData)
                this.$refs.paginationInfo.setPaginationData(paginationData)
            },
            onChangePage: function (page) {
                this.$refs.vuetable.changePage(page)
            },
            onRefresh: function () {
                var that = this;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onFilterSet: async function () {
                var that = this;
                that.appendParams.filter1 = this.tmpCustomer.ID;
                that.appendParams.filter2 = this.ToDateSearch;
                that.appendParams.filter3 = this.EndDateSearch;
                that.appendParams.filter4 = this.Search;
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            onFilterReset: function () {
                var that = this;
                delete that.appendParams.filter1
                delete that.appendParams.filter2
                delete that.appendParams.filter3
                delete that.appendParams.filter4
                Vue.nextTick(function () { that.$refs.vuetable.refresh() })
            },
            drawDT() {
                $("#dataTable").DataTable().draw();
            },
            asyncCall: async function () {
                for (var temp in this.tempchart) {
                    //console.log(temp, tempchart[temp]);
                    var datenum = parseInt(this.tempchart[temp][0].split('(')[1].split(')')[0]);
                    var d = new Date(datenum);
                    if (this.tempchart[temp][1] != 0) {
                        await this.datatemp.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()), this.tempchart[temp][1] == 0 ? null : this.tempchart[temp][1]]);
                    }
                }
            },
            asyncCall2: async function () {
                for (var temp in this.tempchart2) {
                    //console.log(temp, tempchart2[temp]);
                    var datenum = parseInt(this.tempchart2[temp][0].split('(')[1].split(')')[0]);
                    var d = new Date(datenum);
                    if (this.tempchart2[temp][1] != 0) {
                        await this.datatemp2.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()), this.tempchart2[temp][1] == 0 ? null : this.tempchart2[temp][1]]);
                    }
                }
            },
            openPopup: async function (dataItem) {
                var that = this;
                //that.popPatientData = dataItem;
                $("#myModal").modal()
                const calendar = this.$refs.calendar
                //var dt = new Date(Date.now());
                //dt.setDate(dt.getDate() - 15);
                await calendar.move(that.parseJsonDate(dataItem.Date))
                //that.twoNextChange = that.parseJsonDate(dt);
                that.popPatientData = {
                    Date: that.parseJsonDate(dataItem.Date),
                    //Date: that.parseJsonDate(dt),
                    Hour: dataItem.Time.slice(0, 2),
                    Minute: dataItem.Time.slice(3, 5),
                    T: dataItem.T,
                    PulseSBP: dataItem.PulseSBP,
                    PulseDBP: dataItem.PulseDBP,
                    R: dataItem.R,
                    BP: dataItem.BP,
                    O2: dataItem.O2,
                    In_Oral: dataItem.In_Oral,
                    In_Parenteral: dataItem.In_Parenteral,
                    Out_Stools: dataItem.Out_Stools,
                    Out_Urine: dataItem.Out_Urine
                };
            },
            openPopupNew: function (val) {
                var that = this;
                that.popPatientData = {
                    Date: that.parseJsonDate(Date.now()),
                    Hour: '',
                    Minute: '',
                    T: '',
                    PulseSBP: '',
                    PulseDBP: '',
                    R: '',
                    BP: '',
                    O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                };
            },
            BackCustomer:function(){
                var that=this;
                window.location.replace('@Url.Action("PatientDetail", "Home")?customerCN=' + that.tmpCustomer.CN)
            },
            parseJsonDate: function (jsonDateString){
                return moment(jsonDateString).format("MMM DD, YYYY").toUpperCase();
            },
            ExportExcel:async function(){
                var that = this;
                that.showLoad = true;
                var temp = {
                    tmpCustomerID : this.tmpCustomer.ID,
                    ToDateSearch : this.ToDateSearch,
                    EndDateSearch : this.EndDateSearch,
                    Search: this.Search,
                    PatientName: this.tmpCustomer.Patient_Name,
                    PatientRoom: (this.tmpCustomer.Room == null ? '' : this.tmpCustomer.Room),
                };
                var tempData = JSON.stringify(temp)
                window.location.replace('@Url.Action("ReportPatientDataEXCEL", "Home")?tempData=' + tempData);
                that.showLoad = false;
                //that.$http.post('@Url.Action("ReportPatientDataEXCEL", "Home")', {
                //}).then(function (response) {
                //    if (response.data.ContentEncoding == 200) {
                //        alert('Export Success');
                //    }
                //}).finally(function (response) {
                //    that.showLoad = false;
                //});
            },
            GetPatientData:async function(){
                var that = this;
                //$("#dataTable").DataTable().destroy();
                that.showLoad = true;
                that.PatientData = [];
                var test = [];
                that.$http.post('@Url.Action("GetPatientData", "Home")', {
                    tmpCustomerID: that.tmpCustomer.ID,
                    ToDate: that.ToDateSearch,
                    EndDate: that.EndDateSearch,
                }).then(function (response) {
                    if (response.data.ContentEncoding == 200) {
                        for (var i = 0; i < response.data.data.length; i++)
                        {
                            //for (var a = 0; a < that.PatientData.length; a++) {
                                //lblChartData.push(that.PatientData[a].Time);
                                //if (that.PatientData[a].Date == that.parseJsonDate(response.data.data[i].Date) && that.PatientData[a].Time == response.data.data[i].Time)
                                //{
                            dataPSinChartData.push(response.data.data[i].PulseSBP);
                            dataPDinChartData.push(response.data.data[i].PulseDBP);
                            //that.PatientData[a].T = response.data.data[i].T;
                            //that.PatientData[a].PulseSBP = response.data.data[i].PulseSBP;
                            //that.PatientData[a].PulseDBP = response.data.data[i].PulseDBP;
                            //that.PatientData[a].R = response.data.data[i].R;
                            //that.PatientData[a].BP = response.data.data[i].BP;
                            //that.PatientData[a].O2 = response.data.data[i].O2;
                            //that.PatientData[a].In_Oral = response.data.data[i].In_Oral;
                            //that.PatientData[a].In_Parenteral = response.data.data[i].In_Parenteral;
                            //that.PatientData[a].Out_Stools = response.data.data[i].Out_Stools;
                            //that.PatientData[a].Out_Urine = response.data.data[i].Out_Urine;
                            var Datas = [];
                            Datas.Date = that.parseJsonDate(response.data.data[i].Date);
                            Datas.Hour = response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[0] : null;
                            Datas.Minute = response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[1] : null;
                            Datas.T = response.data.data[i].T;
                            Datas.PulseSBP = response.data.data[i].PulseSBP;
                            Datas.PulseDBP = response.data.data[i].PulseDBP;
                            Datas.R = response.data.data[i].R;
                            Datas.BP = response.data.data[i].BP;
                            Datas.O2 = response.data.data[i].O2;
                            Datas.In_Oral = response.data.data[i].In_Oral;
                            Datas.In_Parenteral = response.data.data[i].In_Parenteral;
                            Datas.Out_Stools = response.data.data[i].Out_Stools;
                            Datas.Out_Urine = response.data.data[i].Out_Urine;

                            var test1 = [];
                            test1.push(
                                that.parseJsonDate(response.data.data[i].Date),
                                response.data.data[i].Time,
                                response.data.data[i].T,
                                response.data.data[i].PulseSBP + '/' + response.data.data[i].PulseDBP,
                                response.data.data[i].R,
                                response.data.data[i].BP,
                                response.data.data[i].O2,
                                response.data.data[i].In_Oral,
                                response.data.data[i].In_Parenteral,
                                response.data.data[i].Out_Stools,
                                response.data.data[i].Out_Urine);
                            //test.push(Datas);
                            test.push({
                                "Date": that.parseJsonDate(response.data.data[i].Date),
                                "Hour": response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[0] : null,
                                "Minute" : response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[1] : null,
                                "T" : response.data.data[i].T,
                                "PulseSBP" : response.data.data[i].PulseSBP,
                                "PulseDBP" : response.data.data[i].PulseDBP,
                                "R" : response.data.data[i].R,
                                "BP" : response.data.data[i].BP,
                                "O2" : response.data.data[i].O2,
                                "In_Oral" : response.data.data[i].In_Oral,
                                "In_Parenteral" : response.data.data[i].In_Parenteral,
                                "Out_Stools" : response.data.data[i].Out_Stools,
                                "Out_Urine" : response.data.data[i].Out_Urine
                            });
                            that.PatientData.push(Datas);
                                //}
                            //}
                        }
                        //$(document).ready(function () {
                        //    $('#dataTable').DataTable({
                        //        data: test,
                        //        columns: [
                        //            { title: "Date"},
                        //            { title: "Time" },
                        //            { title: "T" },
                        //            { title: "BP" },
                        //            { title: "R" },
                        //            { title: "P" },
                        //            { title: "O2" },
                        //            { title: "IN Oral" },
                        //            { title: "IN Parenteral" },
                        //            { title: "OUT Stools" },
                        //            { title: "OUT Urine" },
                        //        ]
                        //    });
                        //});
                        //if (that.testt) {
                        //    var datatable = $('#dataTable').DataTable();
                        //    //$('#dataTable').DataTable().fnClearTable();
                        //    //$('#dataTable').DataTable().fnAddData(that.PatientData);
                        //    //datatable.clear();
                        //    datatable.destroy();
                        //    //datatable.rows.add(test);
                        //    datatable.draw();
                        //}

                        that.showLoad = false;
                        //chart.update();
                        //that.PatientData = response.data.data;
                    }
                }).finally(function (response) {
                    that.showLoad = false;
                });
            },
            PatientChartData:async function(){
                var that = this;
                that.showLoad = true;
                var temp = {
                    tmpCustomerID: this.tmpCustomer.ID,
                    ToDateSearch: this.ToDateSearch,
                    EndDateSearch: this.EndDateSearch,
                    Search: this.Search,
                    PatientName: this.tmpCustomer.Patient_Name,
                    PatientRoom: (this.tmpCustomer.Room == null ? '' : this.tmpCustomer.Room),
                };
                var tempData = JSON.stringify(temp)
                that.$http.post('@Url.Action("PatientChartData", "Home")?tempData=' + tempData)
                    .then(async function (response) {
                    if (response.data.ContentEncoding == 200)
                    {
                        that.tempchart = response.data.data.chart;
                        that.tempchart2 = response.data.data.chart2;
                        await that.asyncCall();
                        await that.asyncCall2();

                        var chart1 = new Highcharts.Chart('chart', {
                            chart: {
                                type: 'line'
                            },
                            title: {
                                text: 'Temperature and Pulse'
                            },
                            xAxis: {
                                type: 'datetime',
                            },
                            yAxis: [{
                                gridLineWidth: 0,
                                min: 35,
                                max: 41,
                                floor: 35,
                                ceiling: 41,
                                softMax: 41,
                                softMin: 35,
                                tickAmount: 7,
                                plotLines: [{
                                    color: 'red',
                                    value: '37.5',
                                    width: '1'
                                }],
                                labels: {
                                    format: '{value}°C',
                                    style: {
                                        color: "#4286f5"
                                    }
                                },
                                title: {
                                    text: 'Temperature (&#8451;)',
                                    style: {
                                        color: "#4286f5"
                                    }
                                },
                                opposite: false
                            }, {
                                gridLineWidth: 0,
                                min: 45,
                                max: 120,
                                floor: 45,
                                ceiling: 120,
                                softMin: 45,
                                softMax: 120,
                                tickAmount: 10,
                                labels: {
                                    format: '{value}',
                                    style: {
                                        color: "#f92222"
                                    }
                                },
                                title: {
                                    text: 'Pulse',
                                    style: {
                                        color: "#f92222"
                                    }
                                },
                                opposite: false
                            }],
                            tooltip: {
                                shared: true
                                //formatter: function () {
                                //    var s = '<b>' + Highcharts.dateFormat('%b-%e', this.x) + ' ' + Highcharts.dateFormat('%H:%M', this.points[0].point.x) + '</b><br/>';
                                //    s += 'Data: ' + this.points[0].point.y + '<br/>';
                                //    return s;
                                //},
                                //crosshairs: true,
                                //shared: true
                            },
                            series: [
                                {
                                    name: 'Temp',
                                    type: 'spline',
                                    color: '#4286f5',
                                    yAxis: 0,
                                    data: that.datatemp,
                                    marker: {
                                        enabled: false
                                    },
                                    dashStyle: 'shortdot',
                                    tooltip: {
                                        valueSuffix: ' °C'
                                    }
                                },
                                {
                                    name: 'Pulse',
                                    color: '#f92222',
                                    yAxis: 1,
                                    data: that.datatemp2
                                }
                            ]
                        });

                        chart1.update({
                            series: [
                                {
                                    data: that.datatemp,
                                },
                                {
                                    data: that.datatemp2
                                }
                            ]
                        });
                    }
                }).finally(function (response) {
                    that.showLoad = false;
                });
            },
            SaveDataPatient:function(){
                var that = this;
                var conf = confirm("ยืนยันการบันทึก [ใช่หรือไม่]");
                if (conf === true) {
                    that.$http.post('@Url.Action("UpdateDataPatient", "Home")', {
                        tmpData: JSON.stringify(that.popPatientData),
                        tmpCustomerID: that.tmpCustomer.ID
                    }).then(function (response) {
                        if (response.data.ContentEncoding == 200) {
                            alert('Update Patient Data Success');
                            console.log(response.data.data);
                            location.reload();
                        }
                    });
                }
            },
        }
    });
</script>

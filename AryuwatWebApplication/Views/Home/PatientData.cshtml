@using AryuwatWebApplication.Models
@{
    ViewBag.Title = "Patient Data";
}
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>
<script src="http://code.highcharts.com/themes/grid.js"></script>
<div id="app" class="container-fluid">
    <header class="page-header page-header-dark bg-gradient-primary-to-secondary pb-10" style="background-color:#ffe480">
        <div class="container">
            <div class="page-header-content pt-4">
                <div class="row align-items-center justify-content-between">
                    <div class="col-auto mt-4">
                        <div class="row">
                            <div class="col-lg-1" style="padding-top: 9px;">
                                <a v-on:click="BackCustomer()" style="color:black;font-size:30px;"><i class="fa fa-angle-double-left"></i></a>
                            </div>
                            <div class="col-lg-6">
                                <h1 class="page-header-title">
                                    {{tmpCustomer.Patient_Name}}
                                </h1>
                            </div>
                            <div class="col-lg-5">
                                <h1 class="page-header-title">
                                    {{'Room : ' + (tmpCustomer.Room == null ? '-' : tmpCustomer.Room)}}
                                </h1>
                            </div>
                            <div class="col-lg-1">
                            </div>
                            <div class="col-lg-11">
                                <div class="page-header-subtitle">CN : {{tmpCustomer.CN}}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="container mt-n10">
        <div class="card mb-4">
            <div class="card-header">ตรวจวัดข้อมูลผู้ป่วย</div>
            <div class="card-body">
                <div class="datatable">
                    <div class="table-responsive">
                        <div id="chart" style="width: 1000px; height: 400px; margin: 0 auto;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="card mb-4">
            <div class="card-header">ตรวจวัดข้อมูลผู้ป่วย</div>
            <div class="card-body">
                <div class="row">
                    <div class="col-3">
                        <p style="text-align:left">ตั้งแต่วันที่</p>
                    </div>
                    <div class="col-3">
                        <p style="text-align:left">ถึง</p>
                        <p style="text-align:left"></p>
                    </div>
                </div>
                <div class="row" style="padding-bottom:30px">
                    <div class="col-3">
                        <v-date-picker v-model='ToDateSearch' />
                        @*<input type="date" id="birthdaytime" name="birthdaytime" v-model="ToDateSearch">*@
                    </div>
                    <div class="col-3">
                        <v-date-picker v-model='EndDateSearch' />
                        @*<input type="date" id="birthdaytime2" name="birthdaytime2" v-model="EndDateSearch">*@
                    </div>
                </div>
        <div class="datatable">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="dataTable" cellspacing="0">
                    <thead>
                        @*<tr>
                            <th class="text-right align-middle" style="border: 0px" colspan="11">
                                <button class="btn btn-success btn-sm" data-toggle="modal" data-target="#myModal" v-on:click="openPopupNew(items)"><i class="fa fa-plus"></i>&nbsp; Add Data</button>
                            </th>
                        </tr>*@
                        <tr>
                            <th class="text-center align-middle">Date</th>
                            <th class="text-center align-middle">Time</th>
                            <th class="text-center align-middle">T</th>
                            <th class="text-center align-middle">BP</th>
                            <th class="text-center align-middle">R</th>
                            <th class="text-center align-middle">P</th>
                            <th class="text-center align-middle">O2</th>
                            <th class="text-center align-middle">IN Oral</th>
                            <th class="text-center align-middle">IN Parenteral</th>
                            <th class="text-center align-middle">OUT Stools</th>
                            <th class="text-center align-middle">OUT Urine</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr :key="index" v-for="(items, index) in PatientData" v-if="PatientData.length > 0" data-toggle="modal" data-target="#myModal" style="cursor: pointer;" v-on:click="openPopup(items)" class="rowHover">
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;border-right: 1px solid #ddd;">
                                {{ items.Date }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;">
                                {{ items.Hour + ':' + items.Minute }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;">
                                {{ items.T }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;">
                                {{ items.PulseSBP == null || items.PulseSBP == '' || items.PulseDBP == null || items.PulseDBP == '' ? '' : items.PulseSBP + ' / ' + items.PulseDBP }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;">
                                {{ items.R }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd; border-right: 1px solid #ddd;">
                                {{ items.BP }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;">
                                {{ items.O2 }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;">
                                {{ items.In_Oral }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;">
                                {{ items.In_Parenteral }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;">
                                {{ items.Out_Stools }}
                            </td>
                            <td class="text-center align-middle" style="border-bottom: 1px solid #ddd;">
                                {{ items.Out_Urine }}
                            </td>
                        </tr>
                        <tr v-if="PatientData.length == 0">
                            <td class="text-left" colspan="11">
                                No data available in table
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
                </div>
        </div>
    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true" style="font-size: 18px">
        <div class="modal-dialog modal-dialog-scrollable" style="width: 1000px;" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="exampleModalScrollableTitle">เพิ่ม / แก้ไข ข้อมูล</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row" style="padding: 10px">
                            <div class="col-7">
                                <p style="text-align:left">วันที่ :</p>
                            </div>
                            <div class="col-5">
                                <p style="text-align:left">เวลา :</p>
                            </div>
                            <div class="col-7" style="padding-bottom: 20px">
                                <v-date-picker v-model='popPatientData.Date' />
                            </div>
                            <div class="col-2" style="padding-bottom: 20px">
                                <input type="number" v-model="popPatientData.Hour" style="font-size: 16px;width: 100%" max="23" />
                            </div>
                            <div class="col-1" style="padding-bottom: 20px">
                                <p style="text-align:center">:</p>
                            </div>
                            <div class="col-2" style="padding-bottom: 20px">
                                <input type="number" v-model="popPatientData.Minute" style="font-size: 16px;width: 100%" max="59" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">T :</p>
                            </div>
                            <div class="col-9">
                                <input type="number" v-model="popPatientData.T" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">BP (SBP) :</p>
                            </div>
                            <div class="col-3">
                                <input type="number" v-model="popPatientData.PulseSBP" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">BP (DBP) :</p>
                            </div>
                            <div class="col-3">
                                <input type="number" v-model="popPatientData.PulseDBP" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">R :</p>
                            </div>
                            <div class="col-3">
                                <input type="number" v-model="popPatientData.R" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">Pulse :</p>
                            </div>
                            <div class="col-3">
                                <input type="number" v-model="popPatientData.BP" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-3">
                                <p style="text-align:right">O2 :</p>
                            </div>
                            <div class="col-7">
                                <input type="number" v-model="popPatientData.O2" style="font-size: 16px;width: 5ch" />
                            </div>
                            <div class="col-4">
                                <p style="text-align:right">IN ORAL :</p>
                            </div>
                            <div class="col-5">
                                <input type="number" v-model="popPatientData.In_Oral" style="font-size: 16px;width: 7ch" />
                            </div>
                            <div class="col-4">
                                <p style="text-align:right">IN Parenteral :</p>
                            </div>
                            <div class="col-5">
                                <input type="number" v-model="popPatientData.In_Parenteral" style="font-size: 16px;width: 7ch" />
                            </div>
                            <div class="col-4">
                                <p style="text-align:right">OUT Stools :</p>
                            </div>
                            <div class="col-5">
                                <input type="number" v-model="popPatientData.Out_Stools" style="font-size: 16px;width: 7ch" />
                            </div>
                            <div class="col-4">
                                <p style="text-align:right">OUT Urine :</p>
                            </div>
                            <div class="col-5">
                                <input type="number" v-model="popPatientData.Out_Urine" style="font-size: 16px;width: 7ch" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" v-on:click="SaveDataPatient()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    <div class="fade"
         :class="{'modal-backdrop show' : showLoad}"
         :style="{'cursor' : (showLoad ? 'wait': ''),'z-index' : (showLoad ? '9999': '')}">
        <div v-if="showLoad" style="color:white;position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%)">
            <i class="fa fa-plus fa-spin fa-3x fa-fw"></i><br />
            <span>Loading...</span>
        </div>
    </div>
</div>
<script src="~/Scripts/vue.js"></script>
<script src="~/Scripts/axios.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src='https://unpkg.com/vue/dist/vue.js'></script>
<script src='https://unpkg.com/v-calendar'></script>
<script>
    var tempchart = @Html.Raw(Json.Encode(@Model.chart));
    var tempchart2 = @Html.Raw(Json.Encode(@Model.chart2));
    var lblChartData = [];
    var dataPSinChartData = [];
    var dataPDinChartData = [];
    Vue.prototype.$http = axios;
    const app = new Vue({
        el: "#app",
        data: {
            tmpCustomer : @Html.Raw(Json.Encode(@Model.data)),
            datatemp: [],
            datatemp2: [],
            PatientData: [],
            popPatientData: [],
            fileURL: '',
            firstLoad: false,
            showLoad: false,
            testt: false,
            File: "",
            AttachFileName: "",
            ToDateSearch: "",
            EndDateSearch: "",
        },
        mounted: async function () {
            var that = this;
            that.showLoad = true;
            await that.asyncCall();
            await that.asyncCall2();
            var dt = new Date(Date.now());
            dt.setDate(dt.getDate() - 1);
            that.ToDateSearch = that.parseJsonDate(Date.now());
            that.EndDateSearch = that.parseJsonDate(Date.now());
            var chart1 = new Highcharts.Chart('chart', {
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Temperature and Pulse'
                },
                xAxis: {
                    type: 'datetime',
                },
                yAxis: [{
                    gridLineWidth: 0,
                    min: 35,
                    max: 41,
                    floor: 35,
                    ceiling: 41,
                    softMax: 41,
                    softMin: 35,
                    tickAmount: 7,
                    plotLines: [{
                        color: 'red',
                        value: '37.5',
                        width: '1'
                    }],
                    labels: {
                        format: '{value}°C',
                        style: {
                            color: "#4286f5"
                        }
                    },
                    title: {
                        text: 'Temperature (&#8451;)',
                        style: {
                            color: "#4286f5"
                        }
                    },
                    opposite: false
                }, {
                    gridLineWidth: 0,
                    min: 45,
                    max: 120,
                    floor: 45,
                    ceiling: 120,
                    softMin: 45,
                    softMax: 120,
                    tickAmount: 10,
                    labels: {
                        format: '{value}',
                        style: {
                            color: "#f92222"
                        }
                    },
                    title: {
                        text: 'Pulse',
                        style: {
                            color: "#f92222"
                        }
                    },
                    opposite: false
                }],
                tooltip: {
                    shared: true
                    //formatter: function () {
                    //    var s = '<b>' + Highcharts.dateFormat('%b-%e', this.x) + ' ' + Highcharts.dateFormat('%H:%M', this.points[0].point.x) + '</b><br/>';
                    //    s += 'Data: ' + this.points[0].point.y + '<br/>';
                    //    return s;
                    //},
                    //crosshairs: true,
                    //shared: true
                },
                series: [
                    {
                        name: 'Temp',
                        type: 'spline',
                        color: '#4286f5',
                        yAxis: 0,
                        data: that.datatemp,
                        marker: {
                            enabled: false
                        },
                        dashStyle: 'shortdot',
                        tooltip: {
                            valueSuffix: ' °C'
                        }
                    },
                    {
                        name: 'Pulse',
                        color: '#f92222',
                        yAxis: 1,
                        data: that.datatemp2
                    }
                ]
            });

            if (that.tmpCustomer.CN == null) {
                window.location.href = '@Url.Content("~/Home/Index")';
            }
            if (1 != 1) {
                //that.PatientData.push(
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '00:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '00:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '01:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '01:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '02:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '02:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '03:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '03:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '04:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '04:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '05:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '05:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '06:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '06:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '07:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '07:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '08:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '08:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '09:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '09:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '10:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '10:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '11:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '11:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '12:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '12:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '13:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '13:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '14:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '14:40',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '15:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '15:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '16:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '16:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '17:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '17:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '18:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '18:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '19:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '19:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '20:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '20:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '21:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '21:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '22:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '22:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '23:00',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },
                //    {
                //        Date: that.parseJsonDate(Date.now()),
                //        Time: '23:30',
                //        T: '',
                //        PulseSBP: '',
                //        PulseDBP: '',
                //        R: '',
                //        BP: '',
                //        O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                //    },

                //);
            }
            await that.GetPatientData();
            that.showLoad = false;
            that.firstLoad = true;
        },
        watch: {
            'ToDateSearch'() {
                if(this.firstLoad)
                this.GetPatientData();
            },
            'EndDateSearch'() {
                if(this.firstLoad)
                this.GetPatientData();
            },
            //'PatientData'(val) {
            //    $('#dataTable').DataTable().destroy();
            //    this.$nextTick(() => {
            //        $('#dataTable').DataTable().draw();
            //    })
            //},
        },
        methods: {
            drawDT() {
                $("#dataTable").DataTable().draw();
            },
            asyncCall: async function () {
                for (var temp in tempchart) {
                    //console.log(temp, tempchart[temp]);
                    var datenum = parseInt(tempchart[temp][0].split('(')[1].split(')')[0]);
                    var d = new Date(datenum);
                    if (tempchart[temp][1] != 0) {
                        await this.datatemp.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()), tempchart[temp][1] == 0 ? null : tempchart[temp][1]]);
                    }
                }
            },
            asyncCall2: async function () {
                for (var temp in tempchart2) {
                    //console.log(temp, tempchart2[temp]);
                    var datenum = parseInt(tempchart2[temp][0].split('(')[1].split(')')[0]);
                    var d = new Date(datenum);
                    if (tempchart2[temp][1] != 0) {
                        await this.datatemp2.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()), tempchart2[temp][1] == 0 ? null : tempchart2[temp][1]]);
                    }
                }
            },
            openPopup: function (val) {
                var that = this;
                that.popPatientData = val;
            },
            openPopupNew: function (val) {
                var that = this;
                that.popPatientData = {
                    Date: that.parseJsonDate(Date.now()),
                    Hour: '',
                    Minute: '',
                    T: '',
                    PulseSBP: '',
                    PulseDBP: '',
                    R: '',
                    BP: '',
                    O2: '', In_Oral: '', In_Parenteral: '', Out_Stools: '', Out_Urine: ''
                };
            },
            BackCustomer:function(){
                var that=this;
                window.location.replace('@Url.Action("PatientDetail", "Home")?customerCN=' + that.tmpCustomer.CN)
            },
            parseJsonDate: function (jsonDateString){
                return moment(jsonDateString).format("MMM DD, YYYY").toUpperCase();
            },
            GetPatientData:async function(){
                var that = this;
                //$("#dataTable").DataTable().destroy();
                that.showLoad = true;
                that.PatientData = [];
                var test = [];
                that.$http.post('@Url.Action("GetPatientData", "Home")', {
                    tmpCustomerID: that.tmpCustomer.ID,
                    ToDate: that.ToDateSearch,
                    EndDate: that.EndDateSearch,
                }).then(function (response) {
                    if (response.data.ContentEncoding == 200) {
                        for (var i = 0; i < response.data.data.length; i++)
                        {
                            //for (var a = 0; a < that.PatientData.length; a++) {
                                //lblChartData.push(that.PatientData[a].Time);
                                //if (that.PatientData[a].Date == that.parseJsonDate(response.data.data[i].Date) && that.PatientData[a].Time == response.data.data[i].Time)
                                //{
                            dataPSinChartData.push(response.data.data[i].PulseSBP);
                            dataPDinChartData.push(response.data.data[i].PulseDBP);
                            //that.PatientData[a].T = response.data.data[i].T;
                            //that.PatientData[a].PulseSBP = response.data.data[i].PulseSBP;
                            //that.PatientData[a].PulseDBP = response.data.data[i].PulseDBP;
                            //that.PatientData[a].R = response.data.data[i].R;
                            //that.PatientData[a].BP = response.data.data[i].BP;
                            //that.PatientData[a].O2 = response.data.data[i].O2;
                            //that.PatientData[a].In_Oral = response.data.data[i].In_Oral;
                            //that.PatientData[a].In_Parenteral = response.data.data[i].In_Parenteral;
                            //that.PatientData[a].Out_Stools = response.data.data[i].Out_Stools;
                            //that.PatientData[a].Out_Urine = response.data.data[i].Out_Urine;
                            var Datas = [];
                            Datas.Date = that.parseJsonDate(response.data.data[i].Date);
                            Datas.Hour = response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[0] : null;
                            Datas.Minute = response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[1] : null;
                            Datas.T = response.data.data[i].T;
                            Datas.PulseSBP = response.data.data[i].PulseSBP;
                            Datas.PulseDBP = response.data.data[i].PulseDBP;
                            Datas.R = response.data.data[i].R;
                            Datas.BP = response.data.data[i].BP;
                            Datas.O2 = response.data.data[i].O2;
                            Datas.In_Oral = response.data.data[i].In_Oral;
                            Datas.In_Parenteral = response.data.data[i].In_Parenteral;
                            Datas.Out_Stools = response.data.data[i].Out_Stools;
                            Datas.Out_Urine = response.data.data[i].Out_Urine;

                            var test1 = [];
                            test1.push(
                                that.parseJsonDate(response.data.data[i].Date),
                                response.data.data[i].Time,
                                response.data.data[i].T,
                                response.data.data[i].PulseSBP + '/' + response.data.data[i].PulseDBP,
                                response.data.data[i].R,
                                response.data.data[i].BP,
                                response.data.data[i].O2,
                                response.data.data[i].In_Oral,
                                response.data.data[i].In_Parenteral,
                                response.data.data[i].Out_Stools,
                                response.data.data[i].Out_Urine);
                            //test.push(Datas);
                            test.push({
                                "Date": that.parseJsonDate(response.data.data[i].Date),
                                "Hour": response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[0] : null,
                                "Minute" : response.data.data[i].Time != null && response.data.data[i].Time != "" ? response.data.data[i].Time.split(':')[1] : null,
                                "T" : response.data.data[i].T,
                                "PulseSBP" : response.data.data[i].PulseSBP,
                                "PulseDBP" : response.data.data[i].PulseDBP,
                                "R" : response.data.data[i].R,
                                "BP" : response.data.data[i].BP,
                                "O2" : response.data.data[i].O2,
                                "In_Oral" : response.data.data[i].In_Oral,
                                "In_Parenteral" : response.data.data[i].In_Parenteral,
                                "Out_Stools" : response.data.data[i].Out_Stools,
                                "Out_Urine" : response.data.data[i].Out_Urine
                            });
                            that.PatientData.push(Datas);
                                //}
                            //}
                        }
                        //$(document).ready(function () {
                        //    $('#dataTable').DataTable({
                        //        data: test,
                        //        columns: [
                        //            { title: "Date"},
                        //            { title: "Time" },
                        //            { title: "T" },
                        //            { title: "BP" },
                        //            { title: "R" },
                        //            { title: "P" },
                        //            { title: "O2" },
                        //            { title: "IN Oral" },
                        //            { title: "IN Parenteral" },
                        //            { title: "OUT Stools" },
                        //            { title: "OUT Urine" },
                        //        ]
                        //    });
                        //});
                        //if (that.testt) {
                        //    var datatable = $('#dataTable').DataTable();
                        //    //$('#dataTable').DataTable().fnClearTable();
                        //    //$('#dataTable').DataTable().fnAddData(that.PatientData);
                        //    //datatable.clear();
                        //    datatable.destroy();
                        //    //datatable.rows.add(test);
                        //    datatable.draw();
                        //}

                        that.testt = true;
                        that.showLoad = false;
                        //chart.update();
                        //that.PatientData = response.data.data;
                    }
                }).finally(function (response) {
                    that.showLoad = false;
                });
            },
            SaveDataPatient:function(){
                var that = this;
                var conf = confirm("ยืนยันการบันทึก [ใช่หรือไม่]");
                if (conf === true) {
                    that.$http.post('@Url.Action("UpdateDataPatient", "Home")', {
                        tmpData: JSON.stringify(that.popPatientData),
                        tmpCustomerID: that.tmpCustomer.ID
                    }).then(function (response) {
                        if (response.data.ContentEncoding == 200) {
                            alert('Update Patient Data Success');
                            console.log(response.data.data);
                            location.reload();
                        }
                    });
                }
            },
        }
    });
</script>
